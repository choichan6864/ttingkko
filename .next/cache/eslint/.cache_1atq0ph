[{"/home/choi/ttingkkowiki/pages/_app.tsx":"1","/home/choi/ttingkkowiki/pages/contents/[id].tsx":"2","/home/choi/ttingkkowiki/pages/contents/edit/[id].tsx":"3","/home/choi/ttingkkowiki/pages/index.tsx":"4","/home/choi/ttingkkowiki/pages/list.tsx":"5","/home/choi/ttingkkowiki/pages/write-person.tsx":"6","/home/choi/ttingkkowiki/components/functionButton.tsx":"7","/home/choi/ttingkkowiki/components/navBar.tsx":"8","/home/choi/ttingkkowiki/components/plusListInput.write.tsx":"9","/home/choi/ttingkkowiki/components/search-input.tsx":"10","/home/choi/ttingkkowiki/components/toolbar.tsx":"11"},{"size":1044,"mtime":1681567455806,"results":"12","hashOfConfig":"13"},{"size":3885,"mtime":1681649837279,"results":"14","hashOfConfig":"13"},{"size":5062,"mtime":1681566685736,"results":"15","hashOfConfig":"13"},{"size":1975,"mtime":1681565960607,"results":"16","hashOfConfig":"13"},{"size":2372,"mtime":1681563508598,"results":"17","hashOfConfig":"13"},{"size":3654,"mtime":1681648558030,"results":"18","hashOfConfig":"13"},{"size":536,"mtime":1679828223947,"results":"19","hashOfConfig":"13"},{"size":3999,"mtime":1681646985210,"results":"20","hashOfConfig":"13"},{"size":6384,"mtime":1681646104730,"results":"21","hashOfConfig":"13"},{"size":3577,"mtime":1681648847330,"results":"22","hashOfConfig":"13"},{"size":1538,"mtime":1681648547210,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"adfqyf",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/home/choi/ttingkkowiki/pages/_app.tsx",[],[],"/home/choi/ttingkkowiki/pages/contents/[id].tsx",["62"],[],"import { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserInfo } from \"@/store/store\";\n\nexport default function Contents() {\n  const stateData = useSelector(\n    (state: { activeLogin: boolean; loginLink: string }) => {\n      return { login: state.activeLogin, loginLink: state.loginLink };\n    }\n  );\n  const dispatch = useDispatch<any>();\n  const [personNameAndId, setPersonNameAndId] = useState<{\n    personName: string;\n    idOfWriter: string;\n  }>({ personName: \"\", idOfWriter: \"\" });\n  const { personName, idOfWriter } = personNameAndId;\n  const [contents, setContents] = useState<\n    { contents: string; listText: string }[]\n  >([]);\n  useEffect(() => {\n    dispatch(getUserInfo());\n  }, []);\n  const router = useRouter();\n  useEffect(() => {\n    if (router.query.id)\n      (async () => {\n        const { data } = await axios.get(`/api/contents/${router.query.id}`);\n        const { contents } = data;\n        const array: { contents: string; listText: string }[] = [];\n        const listArray = [];\n        setPersonNameAndId({\n          personName: contents.personName,\n          idOfWriter: data.id,\n        });\n        if (typeof contents.contents !== \"string\")\n          contents.contents.map(\n            (data: { contents: string; listText: string }, index: number) => {\n              array.push({\n                listText: contents.listText[index],\n                contents: contents.contents[index],\n              });\n              listArray.push({ active: true, i: index });\n            }\n          );\n        else {\n          array.push({\n            listText: contents.listText,\n            contents: contents.contents,\n          });\n          listArray.push({ active: true, i: 0 });\n        }\n        setContents(array);\n      })();\n  }, [router.isReady, router.query]);\n  console.log(personNameAndId);\n  return (\n    <div className=\"container\">\n      <h1 className=\"person-name\">\n        <span>{personName}</span>\n        <div className=\"writer-and-edit\">\n          <span className=\"writer\">작성자: {idOfWriter}</span>\n          {stateData.login ? (\n            <Link href={`/contents/edit/${router.query.id}`}>\n              <button className=\"edit-button\">수정</button>\n            </Link>\n          ) : null}\n        </div>\n      </h1>\n      {contents.map(\n        (data: { contents: string; listText: string }, i: number) => {\n          return (\n            <div className=\"list\" key={i}>\n              <h1>\n                <span>{i + 1}</span>\n                <span>.</span>\n                <span className=\"listText\">{data.listText}</span>\n              </h1>\n              <hr />\n              <div\n                className=\"contents\"\n                dangerouslySetInnerHTML={{ __html: data.contents }}\n              ></div>\n            </div>\n          );\n        }\n      )}\n      <style jsx>\n        {`\n          .person-name {\n            font-size: 40px;\n            margin-bottom: 20px;\n            display: flex;\n            justify-content: space-between;\n          }\n          .writer {\n            margin-right:10px;\n            font-size: 16px;\n            font-weight: 400;\n          }\n          .contents {\n            padding-left: 1.4rem;\n          }\n          .list {\n            margin-bottom: 20px;\n          }\n          button {\n            cursor: pointer;\n            width: 54px;\n            background-color: rgb(0, 0, 0, 0);\n            border: 1px solid gray;\n            height: 100%;\n          }\n          hr {\n            border-bottom: 1px solid white;\n            margin-bottom: 20px;\n          }\n          .container {\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n          }\n        `}\n      </style>\n    </div>\n  );\n}\n","/home/choi/ttingkkowiki/pages/contents/edit/[id].tsx",["63","64"],[],"import { ChangeEvent, ReactElement, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport ListInput from \"@/components/plusListInput.write\";\nimport ToolBar from \"@/components/toolbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserInfo } from \"@/store/store\";\n\nfunction WritingPerson() {\n  const [personName, setPersonName] = useState<string>(\"\");\n  const [list, setList] = useState<{ active: boolean; i: number }[]>([]);\n  const [contents, setContents] = useState<\n    { contents: string; listText: string }[]\n  >([]);\n  const stateData = useSelector(\n    (state: { activeLogin: boolean; loginLink: string }) => {\n      return { login: state.activeLogin, loginLink: state.loginLink };\n    }\n  );\n  const dispatch = useDispatch<any>();\n  const router = useRouter();\n  const remove = (index: number) => {\n    setList((list: { active: boolean; i: number }[]) => {\n      const newList = list.filter(\n        (data: { active: boolean; i: number }, i: number) => {\n          return i !== index;\n        }\n      );\n      return newList;\n    });\n  };\n  const setListToTrue = (index: number) => {\n    setList((data: any) => {\n      const array = data;\n      array[index] = { active: true, i: index };\n      return array;\n    });\n  };\n  const setListToFalse = (index: number) => {\n    setList((data: any) => {\n      const array = data;\n      array[index] = { active: false, i: index };\n      return array;\n    });\n  };\n  const onClickPlusButton = () => {\n    const index = list.length;\n    setList([...list, { active: false, i: index }]);\n  };\n  const onSubmit = (e: ChangeEvent<HTMLFormElement>) => {\n    console.log(list);\n    !list[0] || personName === \"\" ? e.preventDefault() : null;\n  };\n  useEffect(() => {\n    dispatch(getUserInfo());\n  }, []);\n  useEffect(() => {\n    if (router.query.id)\n      (async () => {\n        const { data } = await axios.get(`/api/contents/${router.query.id}`);\n        const { contents } = data;\n        const array: { contents: string; listText: string }[] = [];\n        const listArray = [];\n        setPersonName(contents.personName);\n        if (typeof contents.contents !== \"string\")\n          contents.contents.map(\n            (data: { contents: string; listText: string }, index: number) => {\n              array.push({\n                listText: contents.listText[index],\n                contents: contents.contents[index],\n              });\n              listArray.push({ active: true, i: index });\n            }\n          );\n        else {\n          array.push({\n            listText: contents.listText,\n            contents: contents.contents,\n          });\n          listArray.push({ active: true, i: 0 });\n        }\n        setList(listArray);\n        setContents(array);\n      })();\n  }, [router.isReady]);\n  return (\n    <>\n      {stateData.login ? (\n        <form action=\"/api/edit\" method=\"post\" onSubmit={onSubmit}>\n          <h1>{personName}</h1>\n          <input type=\"hidden\" name=\"personName\" value={personName} />\n          <ToolBar onClickPlusButton={onClickPlusButton} />\n          {list.map((data: { active: boolean; i: number }, i: number) => {\n            return contents.length - 1 >= i ? (\n              <ListInput\n                Contents={contents[i].contents}\n                ListText={contents[i].listText}\n                remove={() => remove(i)}\n                index={i}\n                setListToTrue={() => setListToTrue(i)}\n                setListToFalse={() => setListToFalse(i)}\n                key={data.i}\n              />\n            ) : (\n              <ListInput\n                Contents=\"\"\n                ListText=\"\"\n                remove={() => remove(i)}\n                index={i}\n                setListToTrue={() => setListToTrue(i)}\n                setListToFalse={() => setListToFalse(i)}\n                key={data.i}\n              />\n            );\n          })}\n          <style jsx>\n            {`\n              h1 {\n                font-size: 40px;\n              }\n              .cancel-button {\n                cursor: pointer;\n                width: 5rem;\n                height: 35px;\n                color: black;\n                border-radius: 10px;\n              }\n              .save-button {\n                color: black;\n                cursor: pointer;\n                width: 5rem;\n                height: 35px;\n                border-radius: 10px;\n              }\n              .plus-input {\n                padding-left: 20px;\n                height: 50px;\n                font-size: 20px;\n                margin-bottom: 20px;\n                border-radius: 15px;\n                color: black;\n              }\n              input[type=\"submit\"] {\n                height: 50px;\n              }\n              form {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n              }\n            `}\n          </style>\n        </form>\n      ) : null}\n    </>\n  );\n}\n\nexport default function WritePerson() {\n  return <WritingPerson />;\n}\n","/home/choi/ttingkkowiki/pages/index.tsx",[],[],"/home/choi/ttingkkowiki/pages/list.tsx",[],[],"/home/choi/ttingkkowiki/pages/write-person.tsx",["65"],[],"import { ChangeEvent, useEffect, useState, ReactElement, useRef } from \"react\";\nimport ListInput from \"@/components/plusListInput.write\";\nimport ToolBar from \"@/components/toolbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserInfo } from \"@/store/store\";\n\nfunction WritingPerson() {\n  const [personName, setPersonName] = useState<string>(\"\");\n  const [list, setList] = useState<{ active: boolean; i: number }[]>([]);\n  const stateData = useSelector(\n    (state: { activeLogin: boolean; loginLink: string }) => {\n      return { login: state.activeLogin, loginLink: state.loginLink };\n    }\n  );\n  const dispatch = useDispatch<any>();\n  const remove = (index: number) => {\n    setList((list: { active: boolean; i: number }[]) => {\n      const newList = list.filter(\n        (data: { active: boolean; i: number }, i: number) => {\n          return i !== index;\n        }\n      );\n      return newList;\n    });\n  };\n  const setListToTrue = (index: number) => {\n    setList((data: any) => {\n      const array = data;\n      array[index] = { active: true, i: index };\n      return array;\n    });\n  };\n  const setListToFalse = (index: number) => {\n    setList((data: any) => {\n      const array = data;\n      array[index] = { active: false, i: index };\n      return array;\n    });\n  };\n  const onClickPlusButton = () => {\n    const index = list.length;\n    setList([...list, { active: false, i: index }]);\n  };\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setPersonName(e.target.value);\n  };\n  const onSubmit = (e: ChangeEvent<HTMLFormElement>) => {\n    if (!list[0] || personName === \"\") {\n      e.preventDefault();\n    }\n  };\n  useEffect(() => {\n    dispatch(getUserInfo());\n  }, []);\n  return (\n    <>\n      {stateData.login ? (\n        <form action=\"/api/write\" method=\"post\" onSubmit={onSubmit}>\n          <input\n            name=\"personName\"\n            className=\"plus-input\"\n            placeholder=\"이름\"\n            type=\"text\"\n            onChange={onChange}\n          ></input>\n          <ToolBar onClickPlusButton={onClickPlusButton} />\n          {list.map((data: { active: boolean; i: number }, i: number) => {\n            return (\n              <ListInput\n                Contents=\"\"\n                ListText=\"\"\n                remove={() => remove(i)}\n                index={i}\n                setListToTrue={() => setListToTrue(i)}\n                setListToFalse={() => setListToFalse(i)}\n                key={data.i}\n              />\n            );\n          })}\n          <style jsx>\n            {`\n              h1 {\n                font-size: 40px;\n              }\n              .cancel-button {\n                cursor: pointer;\n                width: 5rem;\n                height: 35px;\n                color: black;\n                border-radius: 10px;\n              }\n              .save-button {\n                color: black;\n                cursor: pointer;\n                width: 5rem;\n                height: 35px;\n                border-radius: 10px;\n              }\n              .plus-input {\n                padding-left: 20px;\n                height: 50px;\n                font-size: 20px;\n                margin-bottom: 20px;\n                border-radius: 15px;\n                color: black;\n              }\n              input[type=\"submit\"] {\n                height: 50px;\n              }\n              form {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n              }\n            `}\n          </style>\n        </form>\n      ) : null}\n    </>\n  );\n}\n\nexport default function WritePerson() {\n  return <WritingPerson />;\n}\n","/home/choi/ttingkkowiki/components/functionButton.tsx",[],[],"/home/choi/ttingkkowiki/components/navBar.tsx",["66"],[],"import Image from \"next/image\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport SearchInput from \"./search-input\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserInfo } from \"@/store/store\";\n\nfunction LinkButton({ href, text }: { href: string; text: string }) {\n  return (\n    <li>\n      <Link href={href}>\n        <button>{text}</button>\n      </Link>\n      <style jsx>\n        {`\n          button {\n            height: 100%;\n            cursor: pointer;\n            background-color: rgb(0, 0, 0, 0);\n            color: white;\n            width: 100px;\n          }\n          li {\n            display: inline-block;\n            height: 100%;\n          }\n        `}\n      </style>\n    </li>\n  );\n}\n\nexport default function NavBar() {\n  const dispatch = useDispatch<any>();\n  const [activeSearchInp, setSearchInp] = useState<boolean>(false);\n  const headerData = useSelector(\n    (state: { activeLogin: boolean; loginLink: string }) => {\n      return { login: state.activeLogin, loginLink: state.loginLink };\n    }\n  );\n  const setSearchInpToFalse = () => setSearchInp(false);\n  useEffect(() => {\n    dispatch(getUserInfo());\n  }, []);\n  return (\n    <>\n      <header>\n        <nav>\n          <Link href={\"/\"} target=\"_self\" legacyBehavior>\n            <a className=\"logo\">\n              <Image width={90} alt=\"\" height={90} src=\"/logo.png\"></Image>\n            </a>\n          </Link>\n          <ul className=\"link-list\">\n            <LinkButton href=\"/list\" text=\"목록\" />\n            <LinkButton href=\"/\" text=\"홈\" />\n            {headerData.login ? (\n              <LinkButton href=\"user-info\" text=\"내 정보\" />\n            ) : (\n              <LinkButton href={headerData.loginLink} text=\"로그인\" />\n            )}\n          </ul>\n          <ul>\n            <li className=\"function-button\">\n              <button\n                onClick={() => setSearchInp(true)}\n                className=\"active-search-input\"\n              >\n                <Image\n                  width={45}\n                  height={45}\n                  alt=\"\"\n                  src=\"/search-logo.png\"\n                ></Image>\n              </button>\n              {headerData.login ? (\n                <Link href=\"/write-person\">\n                  <button className=\"write-pesron\">\n                    <Image\n                      width={20}\n                      height={20}\n                      src=\"/write-logo.png\"\n                      alt=\"\"\n                    ></Image>\n                  </button>\n                </Link>\n              ) : null}\n            </li>\n          </ul>\n        </nav>\n        <style jsx>{`\n          .write-person {\n            height: 90px;\n            background-color: rgb(0, 0, 0, 0);\n          }\n          .function-button {\n            display: flex;\n          }\n          .active-search-input {\n            height: 90px;\n            width: 4rem;\n            cursor: pointer;\n            background-color: rgb(0, 0, 0, 0);\n          }\n          .logo {\n            width: 90px;\n            height: 90px;\n          }\n          li {\n            display: inline-block;\n          }\n          .write-pesron {\n            height: 90px;\n            width: 4rem;\n            cursor: pointer;\n            color: white;\n            background-color: rgb(0, 0, 0, 0);\n          }\n          header {\n            height: 90px;\n            // background: linear-gradient(to right bottom, red, blue);\n            position: fixed;\n            background-color: rgb(64, 64, 64);\n            border-bottom: 1px solid black;\n            top: 0;\n            z-index: 5;\n            width: 100%;\n          }\n\n          nav {\n            display: flex;\n            height: 100%;\n            margin: auto;\n            max-width: 1280px;\n          }\n          .link-list {\n            flex: 1;\n          }\n        `}</style>\n      </header>\n\n      {activeSearchInp ? <SearchInput event={setSearchInpToFalse} /> : null}\n    </>\n  );\n}\n","/home/choi/ttingkkowiki/components/plusListInput.write.tsx",[],[],"/home/choi/ttingkkowiki/components/search-input.tsx",[],[],"/home/choi/ttingkkowiki/components/toolbar.tsx",["67"],[],"import { useEffect, useState } from \"react\";\nimport FunctionButton from \"./functionButton\"\n\nexport default function ToolBar({onClickPlusButton}:{onClickPlusButton: () => void}) {\n  const [submiting, setSumbiting] = useState<boolean>(false);\n  const [fixedToolBar, setFixedToolBar] = useState<boolean>(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 150 && !fixedToolBar) setFixedToolBar(true);\n      else setFixedToolBar(false);\n    });\n  }, []);\n  useEffect(() => {\n    const onBeforeUnload = (e: any) => {\n      e.preventDefault();\n      if (!submiting) e.returnValue = true;\n    };\n    window.addEventListener(\"beforeunload\", onBeforeUnload);\n    return () => window.removeEventListener(\"beforeunload\", onBeforeUnload);\n  }, [submiting]);\n    return <div className=\"tool-bar\">\n        <FunctionButton\n          mod=\"button\"\n          text=\"+\"\n          event={onClickPlusButton}\n          title=\"목록 추가\"\n        />\n        <FunctionButton text=\"📄\" mod=\"submit\" event={() => {setSumbiting(true)}} title=\"저장\" />\n        <FunctionButton text=\"🖼\" mod=\"button\" event={() => {}} title=\"이미지 추가\" />\n        <style jsx>{`\n          .tool-bar {\n            height: 40px;\n            ${fixedToolBar ? \"position: fixed;\" : \"margin-bottom:20px;\"}\n            background-color:rgb(80, 80, 80);\n            display: flex;\n            z-index: 1;\n            max-width: 1000px;\n            width: 100%;\n            top: 90px;\n          }\n        `}</style>\n      </div>\n}",{"ruleId":"68","severity":1,"message":"69","line":25,"column":6,"nodeType":"70","endLine":25,"endColumn":8,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"69","line":56,"column":6,"nodeType":"70","endLine":56,"endColumn":8,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"73","line":85,"column":6,"nodeType":"70","endLine":85,"endColumn":22,"suggestions":"74"},{"ruleId":"68","severity":1,"message":"69","line":54,"column":6,"nodeType":"70","endLine":54,"endColumn":8,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"69","line":44,"column":6,"nodeType":"70","endLine":44,"endColumn":8,"suggestions":"76"},{"ruleId":"68","severity":1,"message":"77","line":12,"column":6,"nodeType":"70","endLine":12,"endColumn":8,"suggestions":"78"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["79"],["80"],"React Hook useEffect has a missing dependency: 'router.query.id'. Either include it or remove the dependency array.",["81"],["82"],["83"],"React Hook useEffect has a missing dependency: 'fixedToolBar'. Either include it or remove the dependency array.",["84"],{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},{"desc":"88","fix":"89"},{"desc":"85","fix":"90"},{"desc":"85","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [dispatch]",{"range":"94","text":"95"},{"range":"96","text":"95"},"Update the dependencies array to be: [router.isReady, router.query.id]",{"range":"97","text":"98"},{"range":"99","text":"95"},{"range":"100","text":"95"},"Update the dependencies array to be: [fixedToolBar]",{"range":"101","text":"102"},[853,855],"[dispatch]",[1821,1823],[2811,2827],"[router.isReady, router.query.id]",[1719,1721],[1189,1191],[495,497],"[fixedToolBar]"]