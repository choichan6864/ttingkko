[{"/home/choi/ttingkkowiki/pages/_app.tsx":"1","/home/choi/ttingkkowiki/pages/contents/[id].tsx":"2","/home/choi/ttingkkowiki/pages/contents/edit/[id].tsx":"3","/home/choi/ttingkkowiki/pages/index.tsx":"4","/home/choi/ttingkkowiki/pages/list.tsx":"5","/home/choi/ttingkkowiki/pages/write-person.tsx":"6","/home/choi/ttingkkowiki/components/functionButton.tsx":"7","/home/choi/ttingkkowiki/components/navBar.tsx":"8","/home/choi/ttingkkowiki/components/plusListInput.write.tsx":"9","/home/choi/ttingkkowiki/components/toolbar.tsx":"10","/home/choi/ttingkkowiki/components/search-input.tsx":"11"},{"size":962,"mtime":1681558371619,"results":"12","hashOfConfig":"13"},{"size":2904,"mtime":1681560478859,"results":"14","hashOfConfig":"13"},{"size":4368,"mtime":1681011655349,"results":"15","hashOfConfig":"13"},{"size":1862,"mtime":1681513542433,"results":"16","hashOfConfig":"13"},{"size":2288,"mtime":1681015013120,"results":"17","hashOfConfig":"13"},{"size":3043,"mtime":1681016059260,"results":"18","hashOfConfig":"13"},{"size":536,"mtime":1679828223947,"results":"19","hashOfConfig":"13"},{"size":3417,"mtime":1681559195259,"results":"20","hashOfConfig":"13"},{"size":6384,"mtime":1681010508769,"results":"21","hashOfConfig":"13"},{"size":1161,"mtime":1681011999629,"results":"22","hashOfConfig":"13"},{"size":3522,"mtime":1681556759490,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"adfqyf",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/choi/ttingkkowiki/pages/_app.tsx",[],[],"/home/choi/ttingkkowiki/pages/contents/[id].tsx",[],[],"/home/choi/ttingkkowiki/pages/contents/edit/[id].tsx",["60"],[],"import { ChangeEvent, ReactElement, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport ListInput from \"@/components/plusListInput.write\";\nimport ToolBar from \"@/components/toolbar\";\n\nfunction WritingPerson() {\n  const [personName, setPersonName] = useState<string>(\"\");\n  const [list, setList] = useState<{ active: boolean; i: number }[]>([]);\n  const [contents, setContents] = useState<\n    { contents: string; listText: string }[]\n  >([]);\n  const router = useRouter();\n  const remove = (index: number) => {\n    setList((list: { active: boolean; i: number }[]) => {\n      const newList = list.filter(\n        (data: { active: boolean; i: number }, i: number) => {\n          return i !== index;\n        }\n      );\n      return newList;\n    });\n  };\n  const setListToTrue = (index: number) => {\n    setList((data: any) => {\n      const array = data;\n      array[index] = { active: true, i: index };\n      return array;\n    });\n  };\n  const setListToFalse = (index: number) => {\n    setList((data: any) => {\n      const array = data;\n      array[index] = { active: false, i: index };\n      return array;\n    });\n  };\n  const onClickPlusButton = () => {\n    const index = list.length;\n    setList([...list, { active: false, i: index }]);\n  };\n  const onSubmit = (e: ChangeEvent<HTMLFormElement>) => {\n    console.log(list);\n    !list[0] || personName === \"\" ? e.preventDefault() : null;\n  };\n  useEffect(() => {\n    if (router.query.id)\n      (async () => {\n        const { data } = await axios.get(`/api/contents/${router.query.id}`);\n        const { contents } = data;\n        const array: { contents: string; listText: string }[] = [];\n        const listArray = [];\n        setPersonName(contents.personName);\n        if (typeof contents.contents !== \"string\")\n          contents.contents.map(\n            (data: { contents: string; listText: string }, index: number) => {\n              array.push({\n                listText: contents.listText[index],\n                contents: contents.contents[index],\n              });\n              listArray.push({ active: true, i: index });\n            }\n          );\n        else {\n          array.push({\n            listText: contents.listText,\n            contents: contents.contents,\n          });\n          listArray.push({ active: true, i: 0 });\n        }\n        setList(listArray);\n        setContents(array);\n      })();\n  }, [router.isReady]);\n  return (\n    <form action=\"/api/edit\" method=\"post\" onSubmit={onSubmit}>\n      <h1>{personName}</h1>\n      <input type=\"hidden\" name=\"personName\" value={personName} />\n      <ToolBar onClickPlusButton={onClickPlusButton} />\n      {list.map((data: { active: boolean; i: number }, i: number) => {\n        return contents.length - 1 >= i ? (\n          <ListInput\n            Contents={contents[i].contents}\n            ListText={contents[i].listText}\n            remove={() => remove(i)}\n            index={i}\n            setListToTrue={() => setListToTrue(i)}\n            setListToFalse={() => setListToFalse(i)}\n            key={data.i}\n          />\n        ) : (\n          <ListInput\n            Contents=\"\"\n            ListText=\"\"\n            remove={() => remove(i)}\n            index={i}\n            setListToTrue={() => setListToTrue(i)}\n            setListToFalse={() => setListToFalse(i)}\n            key={data.i}\n          />\n        );\n      })}\n      <style jsx>\n        {`\n          h1 {\n            font-size: 40px;\n          }\n          .cancel-button {\n            cursor: pointer;\n            width: 5rem;\n            height: 35px;\n            color: black;\n            border-radius: 10px;\n          }\n          .save-button {\n            color: black;\n            cursor: pointer;\n            width: 5rem;\n            height: 35px;\n            border-radius: 10px;\n          }\n          .plus-input {\n            padding-left: 20px;\n            height: 50px;\n            font-size: 20px;\n            margin-bottom: 20px;\n            border-radius: 15px;\n            color: black;\n          }\n          input[type=\"submit\"] {\n            height: 50px;\n          }\n          form {\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n          }\n        `}\n      </style>\n    </form>\n  );\n}\n\nexport default function WritePerson() {\n  return <WritingPerson />;\n}\n","/home/choi/ttingkkowiki/pages/index.tsx",[],[],"/home/choi/ttingkkowiki/pages/list.tsx",[],[],"/home/choi/ttingkkowiki/pages/write-person.tsx",[],[],"/home/choi/ttingkkowiki/components/functionButton.tsx",[],[],"/home/choi/ttingkkowiki/components/navBar.tsx",["61"],[],"import axios from \"axios\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport SearchInput from \"./search-input\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserInfo } from \"@/store/store\";\n\nfunction LinkButton({ href, text }: { href: string; text: string }) {\n  return (\n    <li>\n      <Link href={href}>\n        <button>{text}</button>\n      </Link>\n      <style jsx>\n        {`\n          button {\n            height: 100%;\n            cursor: pointer;\n            background-color: rgb(0, 0, 0, 0);\n            color: white;\n            width: 100px;\n          }\n          li {\n            display: inline-block;\n            height: 100%;\n          }\n        `}\n      </style>\n    </li>\n  );\n}\n\nexport default function NavBar() {\n  const dispatch = useDispatch<any>();\n  const [activeSearchInp, setSearchInp] = useState<boolean>(false);\n  const headerData = useSelector(\n    (state: { activeLogin: boolean; loginLink: string }) => {\n      return { login: state.activeLogin, loginLink: state.loginLink };\n    }\n  );\n  const setSearchInpToFalse = () => setSearchInp(false);\n  useEffect(() => {\n    dispatch(getUserInfo());\n  }, []);\n  return (\n    <>\n      <header>\n        <nav>\n          <Link href={\"/\"} target=\"_self\" legacyBehavior>\n            <a className=\"logo\"></a>\n          </Link>\n          <ul className=\"link-list\">\n            <LinkButton href=\"/list\" text=\"목록\" />\n            <LinkButton href=\"/\" text=\"홈\" />\n            {headerData.login ? (\n              <LinkButton href=\"user-info\" text=\"내 정보\" />\n            ) : (\n              <LinkButton href={headerData.loginLink} text=\"로그인\" />\n            )}\n          </ul>\n          <ul>\n            <li>\n              <button\n                onClick={() => setSearchInp(true)}\n                className=\"active-search-input\"\n              >\n                검색\n              </button>\n              {headerData.login ? (\n                <Link href=\"/write-person\">\n                  <button className=\"write-pesron\">쓰기</button>\n                </Link>\n              ) : null}\n            </li>\n          </ul>\n        </nav>\n        <style jsx>{`\n          .active-search-input {\n            height: 90px;\n            width: 4rem;\n            cursor: pointer;\n            background-color: rgb(0, 0, 0, 0);\n          }\n          .logo {\n            background-image: url(\"/logo.png\");\n            width: 160px;\n            height: 90px;\n          }\n          li {\n            display: inline-block;\n          }\n          .write-pesron {\n            height: 90px;\n            width: 4rem;\n            cursor: pointer;\n            color: white;\n            background-color: rgb(0, 0, 0, 0);\n          }\n          header {\n            height: 90px;\n            // background: linear-gradient(to right bottom, red, blue);\n            position: fixed;\n            background-color: rgb(0, 0, 150);\n            border-bottom: 1px solid black;\n            top: 0;\n            z-index: 5;\n            width: 100%;\n          }\n\n          nav {\n            display: flex;\n            height: 100%;\n            margin: auto;\n            max-width: 1280px;\n          }\n          .link-list {\n            flex: 1;\n          }\n        `}</style>\n      </header>\n\n      {activeSearchInp ? <SearchInput event={setSearchInpToFalse} /> : null}\n    </>\n  );\n}\n","/home/choi/ttingkkowiki/components/plusListInput.write.tsx",[],[],"/home/choi/ttingkkowiki/components/toolbar.tsx",["62"],[],"import { useEffect, useState } from \"react\";\nimport FunctionButton from \"./functionButton\"\n\nexport default function ToolBar({onClickPlusButton}:{onClickPlusButton: () => void}) {\n  const [fixedToolBar, setFixedToolBar] = useState<boolean>(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 150 && !fixedToolBar) setFixedToolBar(true);\n      else setFixedToolBar(false);\n    });\n  }, []);\n    return <div className=\"tool-bar\">\n        <FunctionButton\n          mod=\"button\"\n          text=\"+\"\n          event={onClickPlusButton}\n          title=\"목록 추가\"\n        />\n        <FunctionButton text=\"📄\" mod=\"submit\" event={() => {}} title=\"저장\" />\n        <FunctionButton text=\"🖼\" mod=\"button\" event={() => {}} title=\"이미지 추가\" />\n        <style jsx>{`\n          .tool-bar {\n            height: 40px;\n            ${fixedToolBar ? \"position: fixed;\" : \"margin-bottom:20px;\"}\n            background-color:rgb(0,0, 200);\n            display: flex;\n            z-index: 1;\n            max-width: 1000px;\n            width: 100%;\n            top: 90px;\n          }\n        `}</style>\n      </div>\n}","/home/choi/ttingkkowiki/components/search-input.tsx",[],[],{"ruleId":"63","severity":1,"message":"64","line":74,"column":6,"nodeType":"65","endLine":74,"endColumn":22,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":45,"column":6,"nodeType":"65","endLine":45,"endColumn":8,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"69","line":11,"column":6,"nodeType":"65","endLine":11,"endColumn":8,"suggestions":"70"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router.query.id'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["72"],"React Hook useEffect has a missing dependency: 'fixedToolBar'. Either include it or remove the dependency array.",["73"],{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [router.isReady, router.query.id]",{"range":"80","text":"81"},"Update the dependencies array to be: [dispatch]",{"range":"82","text":"83"},"Update the dependencies array to be: [fixedToolBar]",{"range":"84","text":"85"},[2435,2451],"[router.isReady, router.query.id]",[1216,1218],"[dispatch]",[433,435],"[fixedToolBar]"]